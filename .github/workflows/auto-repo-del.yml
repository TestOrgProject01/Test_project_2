name: Auto Delete Repository with Existence Check

on:
  issues:
    types: [opened, labeled]

jobs:
  handle-repo-deletion:
    if: contains(github.event.issue.labels.*.name, 'repo-deletion')
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: write  # Required for repository deletion

    steps:

      - name: Extract values from issue form
        id: extract
        run: |
          echo "Extracting fields from issue form..."

          REPO_NAME=$(jq -r '.repository_name' <<< "${{ toJson(github.event.issue.body) }}")
          ORG_NAME=$(jq -r '.organization' <<< "${{ toJson(github.event.issue.body) }}")

          echo "Parsed Repository Name: $REPO_NAME"
          echo "Parsed Organization: $ORG_NAME"

          if [[ -z "$REPO_NAME" || -z "$ORG_NAME" ]]; then
            echo "‚ùå Missing repository_name or organization"
            exit 1
          fi

          echo "repo_name=$REPO_NAME" >> $GITHUB_OUTPUT
          echo "org_name=$ORG_NAME" >> $GITHUB_OUTPUT

          echo "REPO_NAME=$REPO_NAME" >> $GITHUB_ENV
          echo "ORG_NAME=$ORG_NAME" >> $GITHUB_ENV

      - name: Update Issue Title
        uses: actions/github-script@v6
        with:
          script: |
            const newTitle = `[Repo Deletion] Request to delete - ${process.env.REPO_NAME}`;
            await github.rest.issues.update({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: newTitle
            });

      - name: Comment on Issue Title Update
        uses: actions/github-script@v6
        with:
          script: |
            const runUrl = `${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}`;
            const body = `
              ### üìù Issue Title Updated

              The issue title has been updated to reflect the repository name \`${process.env.REPO_NAME}\`.

              [View this workflow run](${runUrl})
              `;
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body
            });

      - name: Check if repository exists
        id: check_repo
        env:
          GIT_TOKEN: ${{ secrets.GIT_TOKEN }}
        run: |
          echo "Checking existence of repo: ${{ steps.extract.outputs.org_name }}/${{ steps.extract.outputs.repo_name }}"
          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" \
            -H "Authorization: Bearer $GIT_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/${{ steps.extract.outputs.org_name }}/${{ steps.extract.outputs.repo_name }}")

          echo "HTTP status: $RESPONSE"
          if [ "$RESPONSE" = "200" ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Delete Repository
        if: steps.check_repo.outputs.exists == 'true'
        env:
          GIT_TOKEN: ${{ secrets.GIT_TOKEN }}
        run: |
          echo "Deleting repository..."
          curl -X DELETE \
            -H "Authorization: Bearer $GIT_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/${{ steps.extract.outputs.org_name }}/${{ steps.extract.outputs.repo_name }}"

      - name: Comment on issue after deletion
        if: steps.check_repo.outputs.exists == 'true'
        env:
          GH_TOKEN: ${{ secrets.GIT_TOKEN }}
        run: |
          gh issue comment "${{ github.event.issue.number }}" \
            --repo "${{ github.repository }}" \
            --body "‚úÖ Repository \`${{ steps.extract.outputs.org_name }}/${{ steps.extract.outputs.repo_name }}\` has been **deleted** automatically."

      - name: Comment if repository was not found
        if: steps.check_repo.outputs.exists == 'false'
        env:
          GH_TOKEN: ${{ secrets.GIT_TOKEN }}
        run: |
          gh issue comment "${{ github.event.issue.number }}" \
            --repo "${{ github.repository }}" \
            --body "‚ö†Ô∏è Repository \`${{ steps.extract.outputs.org_name }}/${{ steps.extract.outputs.repo_name }}\` was **not found**. No deletion was performed."
